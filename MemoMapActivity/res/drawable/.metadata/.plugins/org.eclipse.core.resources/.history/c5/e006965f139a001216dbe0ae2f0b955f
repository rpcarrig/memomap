package com.rpcarrig.memomapa;

import java.io.IOException;
import java.util.List;

import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.GoogleMapOptions;
import com.google.android.gms.maps.MapFragment;
import com.google.android.gms.maps.model.CameraPosition;
import com.google.android.gms.maps.model.Circle;
import com.google.android.gms.maps.model.CircleOptions;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.Marker;
import com.google.android.gms.maps.model.MarkerOptions;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.Fragment;
import android.content.DialogInterface;
import android.location.Address;
import android.location.Geocoder;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.SeekBar;
import android.widget.TextView;
import android.widget.SeekBar.OnSeekBarChangeListener;

public class CreateMemoActivity extends Activity {
	private static final String TAG = "CreateMemoActivity";
	private static GoogleMap googleMap;
	
	double latitude,
		   longitude;
	int radius;
	static Circle circle;
	LatLng location;
	Marker marker;
	SeekBar radiusBar;
	String memoBody,
		   locationName;
	EditText bodyText,
			 locNameText;
	
	@Override
	protected void onCreate(Bundle savedInstanceState){
		super.onCreate(savedInstanceState);
		overridePendingTransition(android.R.anim.fade_in, android.R.anim.fade_out);
		
		setContentView(R.layout.activity_creatememo);

		Bundle bundle = getIntent().getExtras();
		latitude  = bundle.getDouble("lat");
		longitude = bundle.getDouble("lon");
		location = new LatLng(latitude, longitude);
		
		GoogleMapOptions googleMapOptions = new GoogleMapOptions();
		MapFragment mapFragment = MapFragment.newInstance(googleMapOptions);
		
		googleMapOptions.camera(new CameraPosition(location, 17, 0, 0));
		getFragmentManager().beginTransaction()
			.add(R.id.create_mapcontainer, mapFragment, "map")
			.commit();
		getFragmentManager().beginTransaction()
			.add(R.id.create_memocontainer, new MemoBody(), "memo")
			.commit();
		
		
	}
	
	protected void onStart(){
		super.onStart();
		googleMap = ((MapFragment)getFragmentManager().findFragmentByTag("map")).getMap();
		MarkerOptions markerOptions = new MarkerOptions();
		marker = googleMap.addMarker(markerOptions.position(location));
	}
	
	public void continueMemo(View view){
		googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(location, 15));
		
		bodyText = (EditText)findViewById(R.id.newmemo_body);
		memoBody = bodyText.getText().toString();
		if(memoBody.contentEquals("")) memoBody = "New Memo";
		
		circle = googleMap.addCircle(new CircleOptions()
			.center(location)
			.fillColor(0x25AA0000)
			.strokeColor(0xFFAA0000)
			.strokeWidth(2)
			.radius(100));
		marker.setTitle(memoBody);
		marker.showInfoWindow();
		
		getFragmentManager().beginTransaction()
			.setCustomAnimations(
				R.anim.slide_in_frombottom, R.anim.slide_out_totop,
				R.anim.slide_in_fromtop, R.anim.slide_out_tobottom)
			.replace(R.id.create_memocontainer, new MemoLoc())
			.commit();	
	}
	
	public void defaultClick(View view){
		SeekBar seekBar = (SeekBar)findViewById(R.id.seekBar1);
		seekBar.setProgress(75);
	}
	
	private void geocode(String address) throws IOException{
		List<Address> found = new Geocoder(this)
				.getFromLocationName(address, 1);
		final LatLng result = new LatLng(found.get(0).getLatitude(),
				found.get(0).getLongitude());
		
		marker.remove();
		marker = googleMap.addMarker(new MarkerOptions()
					.position(result).title(address));
		marker.showInfoWindow();
		googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(result, 17));
	}
	
	public void saveMemoClick(View view){
		locNameText = (EditText)findViewById(R.id.newMemoLocation);
		locationName = locNameText.getText().toString();
		if(locationName.contentEquals("")) locationName = "[" + longitude + ", " + latitude + "]";
		
		radiusBar = (SeekBar)findViewById(R.id.seekBar1);
		circle.setRadius(radius);
		radius = radiusBar.getProgress();
		
		Memo newMemo = new Memo(locationName, memoBody, latitude, longitude, radius);
		DataHandler.getInstance(MemoMap.getInstance()).addMemo(newMemo);
		finish();
	}
	
	private void searchByAddress(){
		View view = getLayoutInflater().inflate(R.layout.dialog_searchaddr,
				null);
		AlertDialog.Builder builder = new AlertDialog.Builder(this);
		builder.setView(view);
		final EditText userInput = (EditText) 
				view.findViewById(R.id.address_entry);
		builder
			.setPositiveButton(R.string.search, new DialogInterface
					.OnClickListener() {
						@Override
						public void onClick(DialogInterface dialog, 
								int which) {
							Log.d(TAG, "onClick");
							String receiveAddress = userInput.getText().toString();
							try {
								geocode(receiveAddress);
							} catch (IOException e) {
								e.printStackTrace();
							}
						}
					})
			.setNegativeButton(R.string.cancel, new DialogInterface
					.OnClickListener() {
						@Override
						public void onClick(DialogInterface dialog, 
								int which) {
						}
					});
		builder.create().show();
	}
	
	public static class Map extends MapFragment {
		@Override
		public void onResume(){
			super.onResume();
		}
	}
	
	public static class MemoBody extends Fragment {
		private final String TAG = "NewMemoBodyFragment";
		public MemoBody(){ }
		
		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container, 
				Bundle savedInstanceState) {
			Log.d(TAG, "onCreateView");
			return inflater.inflate(R.layout.fragment_newmemobody, container, false);
		}
	}
	
	public static class MemoLoc extends Fragment implements OnSeekBarChangeListener{
		final String CLASS = "MemoLocFragment";
		public MemoLoc(){ }
		SeekBar radiusBar;

		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container, 
				Bundle savedInstanceState) {
			Log.d(CLASS, "onCreateView");
			radiusBar = (SeekBar)getActivity().findViewById(R.id.seekBar1);
			return inflater.inflate(R.layout.fragment_newmemoloc, container, false);
		}	
		
		@Override
		public void onProgressChanged(SeekBar seekBar, int progress,
				boolean fromUser) {
			Log.d(TAG, "onProgressChanged");
			progress = (radiusBar.getProgress() + 25);
			circle.setRadius(progress);
			
			TextView distance = (TextView)getActivity()
					.findViewById(R.id.TextView02);
			distance.setText((progress + 25) + " m");
		}
		
		@Override
		public void onResume(){
			super.onResume();
			radiusBar = (SeekBar)getActivity()
					.findViewById(R.id.seekBar1);
			radiusBar.setOnSeekBarChangeListener(this);
			radiusBar.setProgress(75);
		}
		
		@Override
		public void onStartTrackingTouch(SeekBar seekBar) {
			circle.setFillColor(0x000000);
			circle.setStrokeColor(0xFF000000);
		}
		
		@Override
		public void onStopTrackingTouch(SeekBar seekBar) {
			circle.setFillColor(0x25AA0000);
			circle.setStrokeColor(0xFFAA0000);
		}
	}
}